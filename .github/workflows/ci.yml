name: CI Workflow

on:
  push:
    branches:
      - main
      - dev

jobs:

  # Initial configuration setup
  setup:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      # Checkout of the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Node.js installation
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Restore npm cache
      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-


  # Install front-end and back-end dependencies
  install-dependencies:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      # Checkout of the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Node.js installation
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Restore node_modules cache
      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      # Install front-end dependencies
      - name: Install front-end dependencies
        run: npm install
        working-directory: ./

      # Install back-end dependencies
      - name: Install back-end dependencies
        run: npm install
        working-directory: ./server


  #Build the project
  build:
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
      # Checkout of the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Node.js installation
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Restore node_modules cache
      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      # Build the front-end with Vite
      - name: Build front-end
        run: npm run build
        working-directory: ./ 


  # Start back-end and front-end servers
  start-servers:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checkout of the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Node.js installation
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Restore node_modules cache
      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

       # Start the back-end server in the background
      - name: Start back-end server
        run: |
          cd server
          nohup node server.js &
        env:
          NODE_ENV: test

      # Start the front-end server in the background
      - name: Start front-end server
        run: |
          nohup npm run dev -- --host 0.0.0.0 &
          sleep 10
        env:
          NODE_ENV: test
        working-directory: ./


  # Test if servers are accessible and Run tests
  tests:
    runs-on: ubuntu-latest
    needs: start-servers

    steps:
      # Checkout of the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Node.js installation
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Restore node_modules cache
      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      # Build the front-end
      - name: Build front-end
        run: npm run build
        working-directory: ./
      
      # Test if front-end is accessible
      - name: Check front-end accessibility
        run: |
          sleep 5 
          curl -I http://localhost:3000 || echo "Front-end not accessible"

      # Test if back-end is accessible
      - name: Check back-end accessibility
        run: |
          sleep 5 
          curl -I http://localhost:5000 || echo "Back-end not accessible"

      # Execute unit tests
      - name: Run Unit Tests
        run: npm run test:unit

      # Execute E2E tests
      - name: Run E2E Tests
        run: npm run test:e2e
